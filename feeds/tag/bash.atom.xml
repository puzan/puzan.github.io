<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Puzan's Pages - bash</title><link href="https://puzan.dev/" rel="alternate"></link><link href="https://puzan.dev/feeds/tag/bash.atom.xml" rel="self"></link><id>https://puzan.dev/</id><updated>2014-05-14T00:00:00+04:00</updated><entry><title>Direnv</title><link href="https://puzan.dev/linux/2014-05-14-direnv.html" rel="alternate"></link><published>2014-05-14T00:00:00+04:00</published><updated>2014-05-14T00:00:00+04:00</updated><author><name>Ilya Zonov</name></author><id>tag:puzan.dev,2014-05-14:/linux/2014-05-14-direnv.html</id><summary type="html">&lt;p&gt;Как-то раз в  одном из выпусков &lt;a href="http://razbor-poletov.com/2014/03/episode-56.html"&gt;Разбор Полетов&lt;/a&gt; услышал  про отличную и
удобную консольную штуку: &lt;a href="http://direnv.net/"&gt;direnv&lt;/a&gt;. Она позволяет выставлять необходимое
окружение в  зависимости от  текущей директории.  При  этом для  вложенных папок
&lt;a href="http://direnv.net/"&gt;direnv&lt;/a&gt;  окружение сохраняется  (если  не было  переопределено), а  при
выходе из папки возвращается предыдущее рабочее окружение.&lt;/p&gt;
&lt;p&gt;На    &lt;em&gt;Mac&lt;/em&gt;   можно …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как-то раз в  одном из выпусков &lt;a href="http://razbor-poletov.com/2014/03/episode-56.html"&gt;Разбор Полетов&lt;/a&gt; услышал  про отличную и
удобную консольную штуку: &lt;a href="http://direnv.net/"&gt;direnv&lt;/a&gt;. Она позволяет выставлять необходимое
окружение в  зависимости от  текущей директории.  При  этом для  вложенных папок
&lt;a href="http://direnv.net/"&gt;direnv&lt;/a&gt;  окружение сохраняется  (если  не было  переопределено), а  при
выходе из папки возвращается предыдущее рабочее окружение.&lt;/p&gt;
&lt;p&gt;На    &lt;em&gt;Mac&lt;/em&gt;   можно    установить   из    &lt;em&gt;brew&lt;/em&gt;.    Или    из   исходников    с
&lt;a href="https://github.com/zimbatm/direnv"&gt;github  репозитория&lt;/a&gt; (пакетов  для  популярных дистрибутивов  не
видел).  Для компиляции понадобится &lt;a href="http://golang.org/"&gt;Go&lt;/a&gt;.   Для Gentoo я добавил простенький
&lt;a href="https://github.com/puzan/puzan-overlay/blob/master/app-shells/direnv/direnv-2.3.0.ebuild"&gt;ebuild&lt;/a&gt; в свой &lt;a href="https://github.com/puzan/puzan-overlay"&gt;оверлей&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Использование предельно простое.  Для начала  надо добавить в файл инициализации
вашего shell'а подобные строчки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; which direnv &amp;gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;direnv hook &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Далее переходим в нужную директорию и обновляем для нее окружение:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cd &amp;lt;path/to/project&amp;gt;
$ direnv edit .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;При  этом  открывается &lt;code&gt;.envrc&lt;/code&gt;  файл  из  текущей  директории в  вашем  любимом
&lt;strong&gt;$EDITOR&lt;/strong&gt;.   Сюда и  добавляем  необходимое окружение  в достаточно  привычном
виде: &lt;code&gt;export VAR=value&lt;/code&gt;. Например, для Android проектов я использую нечто вроде
следующего:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ANDROID_SDK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/Users/puzan/apps/android-sdk
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ANT_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-Dsdk.dir=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_SDK&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь при переходе в папку &lt;code&gt;&amp;lt;path/to/project&amp;gt;&lt;/code&gt; мы увидим следующее:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cd &amp;lt;path/to/project&amp;gt;
direnv: loading .envrc
direnv: export +ANDROID_SDK +ANT_ARGS
$ echo $ANDROID_SDK
/Users/puzan/apps/android-sdk
$ echo $ANT_ARGS 
-Dsdk.dir=/Users/puzan/apps/android-sdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;При выходе из директории, например на уровень выше, окружение выгрузится:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cd ..
direnv: unloading
$ echo $ANDROID_SDK

$ echo $ANT_ARGS 

$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для   Python  проектов   можно   добавить   создание  внутреннего   виртуального
окружения. Помещаем слудующую строчку в &lt;code&gt;.envrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;layout python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;При этом в папке &lt;code&gt;./.direnv/virtualenv/&lt;/code&gt; будет создано виртуальное окружение и в
&lt;strong&gt;$PATH&lt;/strong&gt;  будет добавлен  правильный путь.   Другие подобные  возможности можно
найти &lt;a href="http://direnv.net/#man/direnv-stdlib.1"&gt;здесь&lt;/a&gt; или в &lt;a href="https://github.com/zimbatm/direnv/blob/master/stdlib.sh"&gt;исходниках&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Есть  легкая возможность  добавить  свои  функции. Наприме  я  добавил для  себя
возможнось  указать,   какое  существующее   Python  виртуальное   окружение  из
&lt;code&gt;~/.virtualenvs/&lt;/code&gt; использовать.   Для этого  добавляем в файл  &lt;code&gt;~/.direnvrc&lt;/code&gt; вот
такую функцию:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Usage: use venv &amp;lt;venv&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Loads the specified python virtualenv&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
use_venv&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;VIRTUAL_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.virtualenvs/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    PATH_add &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIRTUAL_ENV&lt;/span&gt;&lt;span class="s2"&gt;/bin&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После этого в &lt;code&gt;.envrc&lt;/code&gt; можно использовать следующую кострукцию:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;use venv &amp;lt;venv_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В общем, возможности для расширения  есть. Думаю можно разширить практически под
любую задачу.  На  мой взгляд &lt;a href="http://direnv.net/"&gt;direnv&lt;/a&gt; очень  удобная штука, позволяющая
забыть про  дополнительную настройку  окружения новых  проектов. Кроме  того эта
методика позволяет избежать захламления файлов инициализации.&lt;/p&gt;</content><category term="linux"></category><category term="bash"></category></entry><entry><title>Macbook Air, блог и bash crash</title><link href="https://puzan.dev/linux/2013-05-21-macbook-air-blog-i-bash-crash.html" rel="alternate"></link><published>2013-05-21T00:00:00+04:00</published><updated>2013-05-21T00:00:00+04:00</updated><author><name>Ilya Zonov</name></author><id>tag:puzan.dev,2013-05-21:/linux/2013-05-21-macbook-air-blog-i-bash-crash.html</id><summary type="html">&lt;p&gt;Со вчерашнего дня решил писать по записи  в день в данный блог, но умудрился уже
проштрафиться. Просто напросто  не успел. Этот план  направлен на структуризацию
своих мыслей.  Хочу  лучше понимать куда стремиться и  чем лучше интересоваться,
заниматься. Кроме того довольно часто начал сталкиваться с различными вопросами,
решения которых не  получается …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Со вчерашнего дня решил писать по записи  в день в данный блог, но умудрился уже
проштрафиться. Просто напросто  не успел. Этот план  направлен на структуризацию
своих мыслей.  Хочу  лучше понимать куда стремиться и  чем лучше интересоваться,
заниматься. Кроме того довольно часто начал сталкиваться с различными вопросами,
решения которых не  получается с первого раза найти в  &lt;em&gt;google&lt;/em&gt; (искать наверное
разучился). Буду выносить все это дело в виде постов сюда. Постараюсь чтобы сюда
попадали  исключительно околотехнические  темы.  Остальное  в &lt;a href="https://plus.google.com/100903917371621392768/posts"&gt;Google+&lt;/a&gt;  или
&lt;a href="https://twitter.com/puzan"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Итак начну  с того, что любимая  девушка подарила мне на  день рождение &lt;em&gt;MacBook
Air&lt;/em&gt;. Поэтому с этого момента на данном блоге будут появляться посты посвященные
и данному замечательному устройству, а также  &lt;em&gt;OS X&lt;/em&gt; (название блога видимо надо
немного поменять). Все они будут помечены с помощью тега &lt;a href="http://puzan-linux.blogspot.ru/search/label/mac"&gt;&lt;em&gt;mac&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;На  Mac'е как  раз и  столкнулся с  одной неприятной  мелкой проблемой,  которая
несколько меня раздражает, но  на данный момент я не знаю,  как ее решить. Сразу
же при  получении этого девайся  я начал устанавливать привычное  мне консольное
окружение. Для этого я использовал &lt;a href="http://www.macports.org/"&gt;macports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Настроил  git completion  и prompt,  используя скрипты  из git-core  порта. Были
установлены следующие версии портов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bash 4.2.42_0&lt;/li&gt;
&lt;li&gt;bash-completion 2.0_1&lt;/li&gt;
&lt;li&gt;git-core 1.8.2.3_0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;И теперь,  время от времени  после выхода из свящего  режима, bash падает  вот с
такой ошибкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-bash(23573,0x7fff75972180) malloc: *** error for object 0x7fb1cb40c530: pointer being freed was not allocated
*** set a breakpoint in malloc_error_break to debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;При этом  я не  совсем уверен,  что эта ошибка  связана с  &lt;em&gt;bash-completion&lt;/em&gt; или
&lt;em&gt;git&lt;/em&gt;.  Буду  искать решение, но отказываться  от completion и prompt  совсем не
хочется.   Думаю   попробовать  &lt;em&gt;bash&lt;/em&gt;  из  &lt;a href="http://mxcl.github.io/homebrew/"&gt;homebrew&lt;/a&gt;,   ну  или  ручками
собрать. Какие еще варианты? Куда копать на mac'е?&lt;/p&gt;
&lt;p&gt;PS. Вот и ушло у меня пару часов на написание казалось бы небольшого текста.&lt;/p&gt;
&lt;p&gt;P.S.   [2013-05-25]  &lt;em&gt;bash&lt;/em&gt; все  равно  продолжает  падать даже  с  выключенными
completions и git-prompt. Происходит это стабильно раз в день.&lt;/p&gt;</content><category term="linux"></category><category term="mac"></category><category term="bash"></category></entry></feed>