<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Puzan's Pages</title><link href="http://puzan.info/" rel="alternate"></link><link href="http://puzan.info/feeds/tag/linux.atom.xml" rel="self"></link><id>http://puzan.info/</id><updated>2015-02-21T00:00:00+03:00</updated><entry><title>Куда отдать компьютеры?</title><link href="http://puzan.info/linux/2015-02-21-kuda-otdat-kompiutery.html" rel="alternate"></link><updated>2015-02-21T00:00:00+03:00</updated><author><name>Ilya Zonov</name></author><id>tag:puzan.info,2015-02-21:linux/2015-02-21-kuda-otdat-kompiutery.html</id><summary type="html">&lt;p&gt;Как уже  писал недавно в &lt;a href="https://twitter.com/puzan/status/567212984490295296"&gt;твиттере&lt;/a&gt;,  есть у меня немного  старой техники,
которую  я уже  не использую  и хочу  найти ей  новое место.  Выкидывать немного
жалко, но и склад дома устраивать нет желания.&lt;/p&gt;
&lt;p&gt;Было бы здорово  узнать, куда люди уносят отработавшие  компьютеры.  Свое железо
отдам  даром, но  надо  понимать, что  для того  чтобы  оно заработало  придется
приложить  некторое усилие.   Нижеописанная техника  нуждается явно  в некоторой
доработке.   Ноутбукам  нужны  жесткие  диски  и на  каждый  девайс  надо  будет
устанавливать какую-нибудь операционную систему.   Поэтому отдавать это железо в
детский дом  или подобные заведения мне  кажется издевательством (переубедите?).
Наиболее подходящим, на  мой взгляд, было бы отдать технику  в какую-нибудь лабу
для образовательных целей.   Либо в личное пользование для  знакомства с темами,
связанными с устройством  компьютеров. Есть ли сейчас радио  кружки, где ребятам
интересно поставить на старое железо какой-нибудь дистрибутив &lt;em&gt;Linux&lt;/em&gt; в качестве
образовательных целей?&lt;/p&gt;
&lt;p&gt;Я  собрал немного  характеристик по  каждому девайсу  и для  наглядности добавил
фоточки.  Итак  смотрим, выбираем.   Может у  кого появятся  идеи, куда  это все
пристроить. И было бы интересно узнать опыт в подобных вопросах.&lt;/p&gt;
&lt;h2&gt;HP G62&lt;/h2&gt;
&lt;p&gt;&lt;img alt="HP G62" src="http://puzan.info/images/comp-hp.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU Intel i5 2.53 GHz&lt;/li&gt;
&lt;li&gt;ОЗУ 4 Gb&lt;/li&gt;
&lt;li&gt;Видео ATI Radeon HD 5470&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Без жесткого диска!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Это ноутбук моей любимой девушки. На  нем был установлен &lt;em&gt;Windows 7&lt;/em&gt;.  Последнее
время любимая  на него  сильно ругалась,  в связи с  чем получила  в пользование
&lt;em&gt;MacBook Air&lt;/em&gt;,  а данный аппарат  перешел в категорию  утиль.  И есть  конечно у
него кучка проблем:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Выключается  от перегрева.   Есть подставка  с вентилятором.   Ее тоже  отдам.
  Возможно, если  на него  установить &lt;em&gt;Linux&lt;/em&gt;,  либо старый  &lt;em&gt;Windows&lt;/em&gt;, проблему
  можно будет побороть. Точно есть связь с подключением дискретной графики.&lt;/li&gt;
&lt;li&gt;Дохлая батарея. Работает только от розетки.&lt;/li&gt;
&lt;li&gt;Требуется докупить жесткий диск.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DELL Inspiron 1501&lt;/h2&gt;
&lt;p&gt;&lt;img alt="DELL Inspiron 1501" src="http://puzan.info/images/comp-dell.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU AMD Turion 64 800 MGz&lt;/li&gt;
&lt;li&gt;ОЗУ 2 Gb&lt;/li&gt;
&lt;li&gt;Видео ATI Radeon Xpress 1150&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Без жесткого диска!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;А  этот экземпляр  -  бывший  ноутбук мамы.   Работал  под управлением  &lt;em&gt;Windows
XP&lt;/em&gt;. Также был  заменен на &lt;em&gt;Air&lt;/em&gt; и  отправлен на списание. Проблемы  с ним почти
такие же:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Дохлая батарея. Работает только от розетки.&lt;/li&gt;
&lt;li&gt;Требуется докупить жесткий диск.&lt;/li&gt;
&lt;li&gt;Грязноватый и потертый.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PC aka «server»&lt;/h2&gt;
&lt;p&gt;&lt;img alt="PC aka «server»" src="http://puzan.info/images/comp-pc.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU Intel Celeron 1,8 GHz&lt;/li&gt;
&lt;li&gt;ОЗУ 2 Gb&lt;/li&gt;
&lt;li&gt;Какое-то интегрированное видео (работал в &lt;em&gt;headless&lt;/em&gt; режиме)&lt;/li&gt;
&lt;li&gt;Дохлый  Ethernet на  материнской  плате, но  есть  еще дополнительная  сетевая
  карточка, которая успешно работает.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 жестких диска (IDE)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;149.1 Gb&lt;/li&gt;
&lt;li&gt;Два диска по 37.3 Gb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;А это  мой доблестный  «сервак».  Верой  и правдой  помогал мне  изучать &lt;em&gt;Linux&lt;/em&gt;
системы. Долгое время был центральной  точкой в домашней сети. Раздавал интернет
и внутренние сервисы  (&lt;em&gt;http server&lt;/em&gt;, &lt;em&gt;file server&lt;/em&gt;, &lt;em&gt;seafile&lt;/em&gt;,  &lt;em&gt;git&lt;/em&gt; и другое)
как по &lt;em&gt;Ethernet&lt;/em&gt;, так и по &lt;em&gt;Wifi&lt;/em&gt; (если необходимо приложу и &lt;em&gt;Wifi&lt;/em&gt; карту).  Из
очевидных  недостатков,  кроме  принципиальной старости  железа,  могу  отметить
только   шум.    Весь   его   функционал   был   успешно   заменен   с   помощью
&lt;em&gt;CubieBoard&lt;/em&gt;. Который кстати совсем не шумит.&lt;/p&gt;</summary><category term="hardware"></category><category term="linux"></category></entry><entry><title>Linux бекапы на Apple Time Capsule (Obnam)</title><link href="http://puzan.info/linux/2015-02-10-linux-bekapy-na-apple-time-capsule-obnam.html" rel="alternate"></link><updated>2015-02-10T00:00:00+03:00</updated><author><name>Ilya Zonov</name></author><id>tag:puzan.info,2015-02-10:linux/2015-02-10-linux-bekapy-na-apple-time-capsule-obnam.html</id><summary type="html">&lt;p&gt;Решил наладить  бекапы с &lt;em&gt;CubieBoard&lt;/em&gt;,  на которой крутится  подточеный &lt;em&gt;Debian&lt;/em&gt;
(&lt;a href="http://cubian.org/"&gt;&lt;em&gt;Cubian&lt;/em&gt;&lt;/a&gt;), на &lt;em&gt;Time Capsule&lt;/em&gt;.  Туда через &lt;em&gt;Time Machine&lt;/em&gt; уже делается
резервная копия  &lt;em&gt;MacBook&lt;/em&gt;'а.  Захотел организовать  аналогичные инкрементальные
бекапы для &lt;em&gt;Linux&lt;/em&gt; коробки. Попытаюсь далее изложить свой опыт.&lt;/p&gt;
&lt;p&gt;С  доступом  к  &lt;em&gt;Time  Capsule&lt;/em&gt;  особых   проблем  в  &lt;em&gt;Linux&lt;/em&gt;  нету.   Ее  можно
подмонтировать с помощью &lt;em&gt;cifs&lt;/em&gt; (не забываем установить &lt;code&gt;cifs-utils&lt;/code&gt;). В &lt;code&gt;fstab&lt;/code&gt;
закидываем следующую строку и все должно работать после монтирования.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;//&amp;lt;TC.local or direct ip&amp;gt;/Data /mnt/tc cifs passwd=thebestpass,sec=ntlm,iocharset=utf8 0 0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Но при этом в &lt;code&gt;/var/log/messages&lt;/code&gt; порой валит вот такие ошибки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[151119.364105] ------------[ cut here ]------------
[151119.375676] WARNING: at fs/inode.c:280 drop_nlink+0x54/0x5c()
[151119.380041] Modules linked in: sunxi_cedar_mod mali ump gpio_sunxi
[151119.394514] [&amp;lt;c0015430&amp;gt;] (unwind_backtrace+0x0/0x134) from [&amp;lt;c003322c&amp;gt;] (warn_slowpath_common+0x54/0x64)
[151119.403340] [&amp;lt;c003322c&amp;gt;] (warn_slowpath_common+0x54/0x64) from [&amp;lt;c00332d8&amp;gt;] (warn_slowpath_null+0x1c/0x24)
[151119.411578] [&amp;lt;c00332d8&amp;gt;] (warn_slowpath_null+0x1c/0x24) from [&amp;lt;c00f0738&amp;gt;] (drop_nlink+0x54/0x5c)
[151119.419177] [&amp;lt;c00f0738&amp;gt;] (drop_nlink+0x54/0x5c) from [&amp;lt;c0248cfc&amp;gt;] (cifs_unlink+0x224/0x654)
[151119.426644] [&amp;lt;c0248cfc&amp;gt;] (cifs_unlink+0x224/0x654) from [&amp;lt;c00e64d0&amp;gt;] (vfs_unlink+0x78/0x104)
[151119.434358] [&amp;lt;c00e64d0&amp;gt;] (vfs_unlink+0x78/0x104) from [&amp;lt;c00e66a0&amp;gt;] (do_unlinkat+0x144/0x16c)
[151119.447019] [&amp;lt;c00e66a0&amp;gt;] (do_unlinkat+0x144/0x16c) from [&amp;lt;c000ec40&amp;gt;] (ret_fast_syscall+0x0/0x30)
[151119.451059] ---[ end trace fddecabeb4cc4bce ]---
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Вроде ничего страшного, но логи забиваются.&lt;/p&gt;
&lt;p&gt;Далее стоит вопрос,  чем и как бекапить.  Для &lt;em&gt;Linux&lt;/em&gt;  популярны системы бекапов
на  основе &lt;code&gt;rsync&lt;/code&gt;  и &lt;em&gt;hard  links&lt;/em&gt;.  Например,  &lt;a href="http://www.rsnapshot.org/"&gt;rsnapshot&lt;/a&gt;. Но  тут
возникает проблема, связанная  с отсутствием поддержки жестких  ссылок в &lt;em&gt;cifs&lt;/em&gt;.
Есть еще &lt;a href="http://www.nongnu.org/rdiff-backup/"&gt;rdiff-backup&lt;/a&gt;, он вроде  как хранит файлы с изменениями.
Но это мой  следующий шаг для тестов, а пока  я использую &lt;a href="http://obnam.org/"&gt;&lt;strong&gt;obnam&lt;/strong&gt;&lt;/a&gt;.  И
сразу скажу: он очень тормозной.&lt;/p&gt;
&lt;p&gt;На &lt;strong&gt;obnam&lt;/strong&gt;  натолкнулся когда-то  &lt;a href="http://www.opennet.ru/opennews/art.shtml?num=39323"&gt;давно&lt;/a&gt;, но  начал разворачивать
после приобретения &lt;em&gt;CubieBoard&lt;/em&gt;.  Первоначально  &lt;strong&gt;obnam&lt;/strong&gt; мне очень понравился.
Гигабайт системных данных бекапил минуты за  2-3.  Я с радости поднял ежечастные
бекапы.  Вроде как настроил систему  аналогичную &lt;em&gt;Time Capsule&lt;/em&gt; c чисткой старых
поколений бекапов (см. поле &lt;code&gt;keep&lt;/code&gt; в  настройках ниже).  Для всего этого написал
небольшой скрипт следующего содержания и положил это добро в крон:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

logger &lt;span class="s2"&gt;&amp;quot;Start backup&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="o"&gt;(&lt;/span&gt;df &lt;span class="p"&gt;|&lt;/span&gt; tail -n +2 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $6}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s1"&gt;&amp;#39;^/mnt/tc$&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    logger &lt;span class="s2"&gt;&amp;quot;Backup fails: tc is not mounted&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

nice -n &lt;span class="m"&gt;19&lt;/span&gt; ionice -c2 -n7 obnam backup

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    logger &lt;span class="s2"&gt;&amp;quot;Backup forget&amp;quot;&lt;/span&gt;
    nice -n &lt;span class="m"&gt;19&lt;/span&gt; ionice -c2 -n7 obnam forget
&lt;span class="k"&gt;else&lt;/span&gt;
    logger &lt;span class="s2"&gt;&amp;quot;Backup failed&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

logger &lt;span class="s2"&gt;&amp;quot;End backup&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;А вот и &lt;strong&gt;obnam&lt;/strong&gt; конфиг:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[config]
repository = /mnt/tc/backup
log = /var/log/obnam.log
log-max = 10M
log-keep = 10
log-level = warning
one-file-system = True
root = /etc, /home, /opt, /root
keep = 24h,7d,15w,24m,5y
upload-queue-size = 512
lru-size = 512
compress-with = deflate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Все это прекрасно  работало до того момента, как я  перенес &lt;a href="http://seafile.com"&gt;seafile&lt;/a&gt; с
~100  гигабайтами данных.   Первичный  бекап занял  около  30 часов.   Следующие
занимали более часа.  К сожалению  подробную статистику не сохранил. После этого
нашел &lt;a href="http://listmaster.pepperfish.net/pipermail/obnam-support-obnam.org/2014-June/003086.html"&gt;пост&lt;/a&gt;, посвященный  тестированию &lt;strong&gt;obnam&lt;/strong&gt; параметров,
влияющих  на  производительность.  На  основе  информации  из указанной  заметки
добавил параметры &lt;code&gt;upload-queue-size&lt;/code&gt;  и &lt;code&gt;lru-size&lt;/code&gt; в конфиг  (см.  выше). Бекап
ускорился до 15 минут.&lt;/p&gt;
&lt;p&gt;Но далее я обновил &lt;em&gt;seafile&lt;/em&gt; через несколько версий, и вдруг количество файлов в
его базе увеличилось  примерно в 2-е (в основном жестки  ссылки).  Это привело к
росту времени бекапов до 1 часа 15  минут.  Я боюсь представить за сколько будет
проходить бекап  почти забитого  1 Тб  диска.  Надеюсь у  меня не  будет столько
данных.  Соответственно бекапы теперь запускаются раз в день. Вроде бы этого для
меня вполне достаточно.&lt;/p&gt;
&lt;p&gt;И  еще один  шаг, который  как  раз заканчиваю  тестировать: положить  &lt;strong&gt;obnam&lt;/strong&gt;
репозиторий в &lt;a href="https://github.com/vgough/encfs"&gt;encfs&lt;/a&gt;. Выбор на этот вариант шифрования также пал за счет
поддержки &lt;em&gt;cifs&lt;/em&gt;. Также  &lt;em&gt;encfs&lt;/em&gt; хороша тем, что нет  необходимости делать некий
виртуальный диск, который  возможно в будущем придется  расширять. Позже добавлю
информацию про эти успехи.&lt;/p&gt;
&lt;p&gt;Данный пост  был создан,  чтобы поделиться собственным  опытом и  возможно найти
более эффективные альтернативы. Добро  покалывать в комментарии. Высказывайтесь!
&lt;strong&gt;obnam&lt;/strong&gt; явно не  лучший вариант для бекапов больших  объемов информации поверх
&lt;em&gt;cifs&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;  К слову  сказать, бекапы  уже  меня успели  спасти. Пусть  они и  идут
медленно,  но  и  меняются  не сильно  часто.   После  выключения  электричества
файловая система  на диске с  данными слегка  поплыла.  Чиниться через  &lt;code&gt;fsck&lt;/code&gt; и
монтироваться  отказывалась.  Данные  в принципе  можно было  бы восстановить  с
диска,  но  быстрее и  проще  оказалось  воспользоваться бекапом.   Бекаптесь  -
пригодится!&lt;/p&gt;</summary><category term="linux"></category><category term="apple"></category><category term="time capsule"></category><category term="cifs"></category><category term="obnam"></category><category term="backup"></category></entry><entry><title>Как создать bridge на nfs root</title><link href="http://puzan.info/linux/2013-09-03-kak-sozdat-bridge-na-nfs-root.html" rel="alternate"></link><updated>2013-09-03T00:00:00+04:00</updated><author><name>Ilya Zonov</name></author><id>tag:puzan.info,2013-09-03:linux/2013-09-03-kak-sozdat-bridge-na-nfs-root.html</id><summary type="html">&lt;p&gt;Для поднятия сети  на одной железке возникла необходимость  создать &lt;em&gt;bridge&lt;/em&gt;. Но
загвоздка в  том, что система  должна при  загрузке монтировать &lt;em&gt;nfs&lt;/em&gt;  в корень.
Данное условие необходимо  для возможности быстро изменить что-то  в системе без
необходимости лезть на флешку.  Отладка идет полным ходом.  Но основная проблема
как раз в том, что при создании  &lt;em&gt;bridge&lt;/em&gt; сеть придется в любом случае оборвать.
&lt;em&gt;Nfs&lt;/em&gt; такого  пережить не может  и отваливается.  Соответственно  система дальше
грузиться не  может так  как нету  корневой файловой системы  и сеть  также сама
вернуться не может.&lt;/p&gt;
&lt;p&gt;Я уже думал  искать какое-то альтернативное решение: как  неожиданно мой коллега
натолкнулся на небольшую &lt;a href="http://lnotestoself.blogspot.ru/2013/04/enabling-bridge-interface-when-youre-on.html"&gt;заметку&lt;/a&gt;, в  которой описано как обойти указанную
проблему.&lt;/p&gt;
&lt;p&gt;Сущность данного решения  сводиться к тому, что надо все  файлы, необходимые для
настройки &lt;em&gt;bridge&lt;/em&gt;, скопировать в раздел с &lt;em&gt;tmpfs&lt;/em&gt;, который будет доступен после
обрыва  сети.  Я,  например,  использовал &lt;code&gt;/tmp&lt;/code&gt;.   А  потом запустить  создание
&lt;em&gt;bridge&lt;/em&gt;  из нового  окружения.   Данный  метод работает  на  ура, нареканий  не
заметил.&lt;/p&gt;
&lt;p&gt;Вот собственно решение с моими малюсенькими изменениями:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -x
mount -o remount,exec /tmp
&lt;span class="nv"&gt;R&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp/root
&lt;span class="nv"&gt;IPADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;192.168.0.159/8

mkdir -p &lt;span class="s2"&gt;&amp;quot;$R/proc&amp;quot;&lt;/span&gt;
cp -r /sbin /bin /lib &lt;span class="s2"&gt;&amp;quot;$R&amp;quot;&lt;/span&gt;
cat &amp;gt; &lt;span class="s2"&gt;&amp;quot;$R/script&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;mount -t proc none /proc&lt;/span&gt;
&lt;span class="s"&gt;brctl addbr br0&lt;/span&gt;
&lt;span class="s"&gt;brctl addif br0 eth0&lt;/span&gt;
&lt;span class="s"&gt;ifconfig br0 &amp;quot;$IPADDR&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;ifconfig eth0 0.0.0.0&lt;/span&gt;
&lt;span class="s"&gt;umount /proc&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

chroot &lt;span class="s2"&gt;&amp;quot;$R&amp;quot;&lt;/span&gt; sh script
rm -r &lt;span class="s2"&gt;&amp;quot;$R/sbin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$R/bin&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$R/lib&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В нутрь &lt;code&gt;script&lt;/code&gt; в принципе можно вставить все, что вам будет необходимо.&lt;/p&gt;
&lt;p&gt;Хорош ли  метод?  Мне  по крайней  мере понравился.   Есть еще  предложения, как
возможно решить данный вопрос?&lt;/p&gt;</summary><category term="linux"></category><category term="nfs"></category><category term="net"></category><category term="bridge"></category></entry></feed>